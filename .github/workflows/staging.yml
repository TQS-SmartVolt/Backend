name: Staging

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  REGISTRY: ghcr.io

jobs:
  integration-stage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [17]
    defaults:
      run:
        working-directory: smartvolt

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: Run Slow Integration Tests
        run: mvn -B integration-test verify -Dtests=IT-Slow --file pom.xml # @Tag("IT-Slow") -> JUnit 5

  build-stage:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/tqs-smartvolt/deploy-backend:latest
            ${{ env.REGISTRY }}/tqs-smartvolt/deploy-backend:${{ github.sha }}

      - name: Checkout AppConfig repository
        uses: actions/checkout@v2
        with:
          submodules: true
          repository: TQS-SmartVolt/AppConfig
          token: ${{ secrets.SMART_VOLT_SECRET }}

      - name: Update .env.production and .env.staging with backend tag
        run: |
          for env_file in .env.production .env.staging; do
            sed -i "s/^BACKEND_TAG=.*/BACKEND_TAG=${{ github.sha }}/" $env_file

            # Commit changes if any
            if ! git diff --quiet $env_file; then
              git config --global user.name "github-actions[bot]"
              git config --global user.email "github-actions[bot]@users.noreply.github.com"
              git add $env_file
              git commit -m "Update BACKEND_TAG in $env_file to ${{ github.sha }}"
            else
              echo "No changes to commit in $env_file"
            fi

          done
            git push origin HEAD:main
        env:
          DOCKER_PORT: 8080
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  uat-stage:
    runs-on: ubuntu-latest
    needs: [build-stage, integration-stage]

    strategy:
      matrix:
        java: [17]
        browser: [chrome, edge, firefox]
    permissions:
      contents: read

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout AppConfig repository
        uses: actions/checkout@v2
        with:
          submodules: true
          repository: TQS-SmartVolt/AppConfig
          token: ${{ secrets.SMART_VOLT_SECRET }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Staging with Docker Compose
        run: |
          set -a
          source .env.staging
          docker compose --file compose.stag.yml down
          docker compose --file compose.stag.yml up -d --build
          docker image prune -a -f
        env:
          DOCKER_PORT: 8080
          username: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Change working directory
        run: cd ..

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven

      - name: Run UAT Web Tests
        working-directory: smartvolt
        run: mvn -B clean test -PUAT-Web -Dbrowser=${{ matrix.browser }} -Dhost=host.testcontainers.internal --file pom.xml # @Tag("UAT-Web") -> JUnit 5

  web-quality-stage:
    runs-on: ubuntu-latest
    needs: uat-stage

    strategy:
      matrix:
        target: [public-pages, operator-pages, evdriver-pages]
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout AppConfig repository
        uses: actions/checkout@v2
        with:
          submodules: true
          repository: TQS-SmartVolt/AppConfig
          token: ${{ secrets.SMART_VOLT_SECRET }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Staging with Docker Compose
        run: |
          set -a
          sed -i '/^VITE_BACKEND_HOST=host\.testcontainers\.internal$/d' .env.staging   # Remove the line to run in localhost
          source .env.staging
          docker compose --file compose.stag.yml down
          docker compose --file compose.stag.yml up -d --build
          docker image prune -a -f
        env:
          DOCKER_PORT: 8080
          username: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Change working directory
        run: cd ..

      - name: Checkout Frontend repository
        uses: actions/checkout@v2
        with:
          submodules: true
          repository: TQS-SmartVolt/Frontend
          token: ${{ secrets.SMART_VOLT_SECRET }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        working-directory: web-quality-tests
        run: |
          npm install

      - name: Run Frontend Quality Tests
        working-directory: web-quality-tests
        run: |
          npm install -g @lhci/cli@0.14.x
          npm run lhci:${{ matrix.target }}
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          GITHUB_SHA: ${{ github.sha }}


  capacity-stage:
    runs-on: self-hosted
    needs: uat-stage

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Performance Tests
        run: echo "TODO. Run the docker image and run the k6s performance tests"
